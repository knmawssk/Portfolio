import logging
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ConversationHandler,
    ContextTypes,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –°–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
(
    NAME, AGE, MEDICATION, DIAGNOSIS,
    TEST_QUESTIONS, SHARE_EXPERIENCE,
    TEST_PANIC_QUESTIONS,
    CHOOSE_FIELD, EDIT_NAME, EDIT_AGE,
    EDIT_MEDICATION, EDIT_DIAGNOSIS
) = range(12)

TEST_TOTAL = 5
PANIC_TEST_TOTAL = 5

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = ReplyKeyboardMarkup(
    [
        ["–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ", "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞"],
        ["–ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞", "–í—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è"],
        ["–°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å", "–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è"]
    ],
    resize_keyboard=True
)

# –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã–º–∏
edit_data_menu = ReplyKeyboardMarkup(
    [
        ["–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", "–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"],
        ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ],
    resize_keyboard=True
)

# –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø–æ–ª—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
choose_field_menu = ReplyKeyboardMarkup(
    [
        ["–ò–º—è", "–í–æ–∑—Ä–∞—Å—Ç"],
        ["–ü—Ä–µ–ø–∞—Ä–∞—Ç—ã", "–î–∏–∞–≥–Ω–æ–∑—ã"],
        ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
result_keyboard = ReplyKeyboardMarkup(
    [
        ["–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–±–æ–ª—å—à–µ", "–í—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è"],
        ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤–æ–∑—Ä–∞—Å—Ç–∞
age_keyboard = ReplyKeyboardMarkup(
    [["12-18", "19-25", "26-35", "36-45", "46-60"]],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –î–∞/–ù–µ—Ç
yes_no_keyboard = ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ç–µ—Å—Ç
test_keyboard = ReplyKeyboardMarkup(
    [["–ù–∏–∫–æ–≥–¥–∞", "–†–µ–¥–∫–æ", "–ò–Ω–æ–≥–¥–∞", "–ß–∞—Å—Ç–æ", "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ"]],
    resize_keyboard=True
)

# –í–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞ –Ω–∞ —Å—Ç—Ä–µ—Å—Å
TEST = [
    "1. –ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –º—ã—à–µ—á–Ω–æ–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ?",
    "2. –ë–µ—Å–ø–æ–∫–æ—è—Ç –≥–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏?",
    "3. –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å–æ —Å–Ω–æ–º?",
    "4. –ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –±–µ—Å–ø—Ä–∏—á–∏–Ω–Ω—É—é —É—Å—Ç–∞–ª–æ—Å—Ç—å?",
    "5. –†–∞–∑–¥—Ä–∞–∂–∞–µ—Ç–µ—Å—å –ø–æ –º–µ–ª–æ—á–∞–º?"
]

# –í–æ–ø—Ä–æ—Å—ã —Ç–µ—Å—Ç–∞ –Ω–∞ –ø–∞–Ω–∏—á–µ—Å–∫–∏–µ –∞—Ç–∞–∫–∏
PANIC_TEST = [
    "1. –ò—Å–ø—ã—Ç—ã–≤–∞–ª–∏ –ª–∏ –≤—ã –≤–Ω–µ–∑–∞–ø–Ω—ã–π —Å–∏–ª—å–Ω—ã–π —Å—Ç—Ä–∞—Ö –∏–ª–∏ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è?",
    "2. –ë—ã–ª–æ –ª–∏ —É –≤–∞—Å —É—á–∞—â–µ–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ –∏–ª–∏ –ø—É–ª—å—Å?",
    "3. –û—â—É—â–∞–ª–∏ –ª–∏ –≤—ã –¥—Ä–æ–∂—å –∏–ª–∏ —Ç—Ä–µ–º–æ—Ä?",
    "4. –ë—ã–ª–∞ –ª–∏ —É –≤–∞—Å –æ–¥—ã—à–∫–∞ –∏–ª–∏ —á—É–≤—Å—Ç–≤–æ —É–¥—É—à—å—è?",
    "5. –ß—É–≤—Å—Ç–≤–æ–≤–∞–ª–∏ –ª–∏ –≤—ã –±–æ–ª—å –∏–ª–∏ –¥–∏—Å–∫–æ–º—Ñ–æ—Ä—Ç –≤ –≥—Ä—É–¥–∏?"
]

# –ë–∞–∑–æ–≤—ã–µ —Å–æ–≤–µ—Ç—ã –ø–æ —Å—Ç—Ä–µ—Å—Å—É
STRESS_ADVICE = {
    "low": "‚úÖ –ù–∏–∑–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (0-5 –±–∞–ª–ª–æ–≤)",
    "medium": "‚ö†Ô∏è –£–º–µ—Ä–µ–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (6-10 –±–∞–ª–ª–æ–≤)",
    "high": "üî• –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (11-15 –±–∞–ª–ª–æ–≤)",
    "critical": "üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å —Å—Ç—Ä–µ—Å—Å–∞ (16-20 –±–∞–ª–ª–æ–≤)"
}

# –ü–æ–¥—Ä–æ–±–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Å—Ç—Ä–µ—Å—Å—É
EXTENDED_ADVICE = {
    "low": (
        "üîç –ü—Ä–æ—Å—Ç—ã–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏:\n\n"
        "1. üìù ¬´3 —Ö–æ—Ä–æ—à–∏—Ö —Å–æ–±—ã—Ç–∏—è¬ª (2 –º–∏–Ω—É—Ç—ã –ø–µ—Ä–µ–¥ —Å–Ω–æ–º):\n"
        "   - –ó–∞–ø–∏—à–∏—Ç–µ 3 –ø—Ä–∏—è—Ç–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–∞ –¥–Ω—è\n"
        "   - –ù–∞–ø–∏—à–∏—Ç–µ, –∫–∞–∫ –≤—ã –∫ –Ω–∏–º –ø—Ä–∏—á–∞—Å—Ç–Ω—ã\n"
        "   –ü—Ä–∏–º–µ—Ä: ¬´–ö–æ–ª–ª–µ–≥–∞ —É–ª—ã–±–Ω—É–ª—Å—è ‚Äî —è –ø–µ—Ä–≤—ã–π –ø–æ–∑–¥–æ—Ä–æ–≤–∞–ª—Å—è¬ª\n\n"
        "2. üö∂ ¬´–û—Å–æ–∑–Ω–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞¬ª (5 –º–∏–Ω—É—Ç):\n"
        "   - –ò–¥–∏—Ç–µ –º–µ–¥–ª–µ–Ω–Ω–æ, —Å—á–∏—Ç–∞—è —à–∞–≥–∏\n"
        "   - –ù–∞ –∫–∞–∂–¥–æ–º –≤–¥–æ—Ö–µ –≥–æ–≤–æ—Ä–∏—Ç–µ ¬´—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ¬ª\n"
        "   - –ù–∞ –≤—ã–¥–æ—Ö–µ ‚Äî ¬´—Ä–∞—Å—Å–ª–∞–±–ª–µ–Ω–∏–µ¬ª"
    ),
    "medium": (
        "üîç –¢–µ—Ö–Ω–∏–∫–∏ –ø—Ä–∏ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–∏:\n\n"
        "1. üå¨Ô∏è ¬´–î—ã—Ö–∞–Ω–∏–µ 5-5-5¬ª (3 –º–∏–Ω—É—Ç—ã):\n"
        "   - –°—è–¥—å—Ç–µ –ø—Ä—è–º–æ, —Ä—É–∫–∞ –Ω–∞ –∂–∏–≤–æ—Ç–µ\n"
        "   - –í–¥–æ—Ö —á–µ—Ä–µ–∑ –Ω–æ—Å 5 —Å–µ–∫ (–∂–∏–≤–æ—Ç –≤—ã–ø—è—á–∏–≤–∞–µ—Ç—Å—è)\n"
        "   - –ó–∞–¥–µ—Ä–∂–∫–∞ 5 —Å–µ–∫\n"
        "   - –í—ã–¥–æ—Ö —á–µ—Ä–µ–∑ —Ä–æ—Ç 5 —Å–µ–∫ (–∫–∞–∫ –±—É–¥—Ç–æ –¥—É–µ—Ç–µ –Ω–∞ —Å–≤–µ—á—É)\n"
        "   - –ü–æ–≤—Ç–æ—Ä–∏—Ç—å 5 —Ü–∏–∫–ª–æ–≤\n\n"
        "2. üßä ¬´–õ–µ–¥—è–Ω–æ–µ –∑–∞–∑–µ–º–ª–µ–Ω–∏–µ¬ª:\n"
        "   - –í–æ–∑—å–º–∏—Ç–µ –∫—É–±–∏–∫ –ª—å–¥–∞ –≤ —Ä—É–∫—É\n"
        "   - –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –æ—â—É—â–µ–Ω–∏—è—Ö:\n"
        "     ‚Ä¢ –°–Ω–∞—á–∞–ª–∞ —Ö–æ–ª–æ–¥–Ω–æ\n"
        "     ‚Ä¢ –ü–æ—Ç–æ–º –ø–æ–∫–∞–ª—ã–≤–∞–µ—Ç\n"
        "     ‚Ä¢ –ó–∞—Ç–µ–º —Ç–∞–µ—Ç –∏ —Ç–µ–ø–ª–µ–µ—Ç"
    ),
    "high": (
        "üîç –°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å –ø—Ä–∏ —Å—Ç—Ä–µ—Å—Å–µ:\n\n"
        "1. üè† ¬´5-4-3-2-1¬ª (3 –º–∏–Ω—É—Ç—ã):\n"
        "   - –ù–∞–∑–æ–≤–∏—Ç–µ 5 –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –≤–æ–∫—Ä—É–≥\n"
        "   - 4 –≤–µ—â–∏, –∫ –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –ø—Ä–∏–∫–æ—Å–Ω—É—Ç—å—Å—è\n"
        "   - 3 –∑–≤—É–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ —Å–ª—ã—à–∏—Ç–µ\n"
        "   - 2 –∑–∞–ø–∞—Ö–∞ –≤–æ–∫—Ä—É–≥\n"
        "   - 1 –≤–∫—É—Å –≤–æ —Ä—Ç—É\n\n"
        "2. ü§≤ ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ¬ª (5 –º–∏–Ω—É—Ç):\n"
        "   - –ó–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞\n"
        "   - –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ —Å–∞–º–æ–µ —Å–ø–æ–∫–æ–π–Ω–æ–µ –º–µ—Å—Ç–æ\n"
        "   - –î–æ–±–∞–≤—å—Ç–µ –¥–µ—Ç–∞–ª–∏: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –∑–≤—É–∫–∏\n"
        "   - –î—ã—à–∏—Ç–µ –≥–ª—É–±–æ–∫–æ, ¬´–ø–æ–±—É–¥—å—Ç–µ¬ª —Ç–∞–º"
    ),
    "critical": (
        "üîç –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:\n\n"
        "1. üìû –ü–æ–∑–≤–æ–Ω–∏—Ç–µ:\n"
        "   - 150 (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–∞—è –ø–æ–º–æ—â—å)\n"
        "   - 112 (—ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã)\n\n"
        "2. üö∂ –§–∏–∑–∏—á–µ—Å–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:\n"
        "   - –ú–µ–¥–ª–µ–Ω–Ω–æ –ø–æ—Ö–æ–¥–∏—Ç–µ –ø–æ –∫–æ–º–Ω–∞—Ç–µ\n"
        "   - –°–∂–∏–º–∞–π—Ç–µ-—Ä–∞–∑–∂–∏–º–∞–π—Ç–µ –∫—É–ª–∞–∫–∏ 10 —Ä–∞–∑\n"
        "   - –í—ã–ø–µ–π—Ç–µ –≤–æ–¥—ã –º–µ–ª–∫–∏–º–∏ –≥–ª–æ—Ç–∫–∞–º–∏\n\n"
        "3. üë• –ö–æ–Ω—Ç–∞–∫—Ç —Å –±–ª–∏–∑–∫–∏–º:\n"
        "   - –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ¬´–ú–Ω–µ –ø–ª–æ—Ö–æ¬ª\n"
        "   - –í–∫–ª—é—á–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤—É—é –∑–∞–ø–∏—Å—å (–¥–∞–∂–µ –º–æ–ª—á–∞)"
    )
}

# –¢–µ—Ö–Ω–∏–∫–∏ –¥–ª—è –ø–∞–Ω–∏—á–µ—Å–∫–∏—Ö –∞—Ç–∞–∫ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
PANIC_TECHNIQUES = {
    0: {
        "message": (
            "üå∏ *–í—ã –º–æ–ª–æ–¥—Ü—ã, —á—Ç–æ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º!*\n"
            "–°–µ–π—á–∞—Å –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ, –Ω–æ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç:\n\n"
            "üßò **–¢–µ—Ö–Ω–∏–∫–∞ '–Ø–∫–æ—Ä–µ–Ω–∏–µ'** (2 –º–∏–Ω—É—Ç—ã):\n"
            "1. –°—è–¥—å—Ç–µ —É–¥–æ–±–Ω–æ, –ø–æ—Å—Ç–∞–≤—å—Ç–µ –æ–±–µ —Å—Ç–æ–ø—ã –Ω–∞ –ø–æ–ª\n"
            "2. –ü–æ–ª–æ–∂–∏—Ç–µ —Ä—É–∫—É –Ω–∞ —Å–µ—Ä–¥—Ü–µ, –ø–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ –µ–≥–æ —Ä–∏—Ç–º\n"
            "3. –ú–µ–¥–ª–µ–Ω–Ω–æ —Å–∫–∞–∂–∏—Ç–µ: *¬´–Ø –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —è —Å–ø–æ–∫–æ–µ–Ω/—Å–ø–æ–∫–æ–π–Ω–∞¬ª*\n"
            "4. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ 3 —Ä–∞–∑–∞, —Å –∫–∞–∂–¥—ã–º —Ä–∞–∑–æ–º –∑–∞–º–µ–¥–ª—è—è —Ä–µ—á—å\n\n"
            "*–í—ã —É–∂–µ –¥–µ–ª–∞–µ—Ç–µ –≤–∞–∂–Ω—ã–π —à–∞–≥ –∫ –∑–∞–±–æ—Ç–µ –æ —Å–µ–±–µ!* üíñ"
        ),
        "keyboard": main_menu
    },
    1: {
        "message": (
            "üåø *–í—ã —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å –ª—É—á—à–µ, —á–µ–º –¥—É–º–∞–µ—Ç–µ!*\n"
            "–ù–µ–±–æ–ª—å—à–∞—è —Ç—Ä–µ–≤–æ–≥–∞ ‚Äî —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. –ü–æ–ø—Ä–æ–±—É–µ–º —ç—Ç—É —Ç–µ—Ö–Ω–∏–∫—É:\n\n"
            "üîÑ **–¢–µ—Ö–Ω–∏–∫–∞ '–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞'** (3 –º–∏–Ω—É—Ç—ã):\n"
            "1. *–í–¥–æ—Ö–Ω–∏—Ç–µ* –≥–ª—É–±–æ–∫–æ —á–µ—Ä–µ–∑ –Ω–æ—Å (–Ω–∞ 4 —Å—á—ë—Ç–∞)\n"
            "2. *–ó–∞–¥–µ—Ä–∂–∏—Ç–µ* –¥—ã—Ö–∞–Ω–∏–µ (–Ω–∞ 2 —Å—á—ë—Ç–∞)\n"
            "3. *–í—ã–¥–æ—Ö–Ω–∏—Ç–µ* —á–µ—Ä–µ–∑ —Å–ª–æ–∂–µ–Ω–Ω—ã–µ —Ç—Ä—É–±–æ—á–∫–æ–π –≥—É–±—ã (–Ω–∞ 6 —Å—á—ë—Ç–æ–≤)\n"
            "4. *–ü–æ—Ö–ª–æ–ø–∞–π—Ç–µ* —Å–µ–±—è –ø–æ –ø–ª–µ—á–∞–º –∫—Ä–µ—Å—Ç-–Ω–∞–∫—Ä–µ—Å—Ç 10 —Ä–∞–∑\n\n"
            "*–í–∏–¥–∏—Ç–µ? –í—ã —É–∂–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é!* üåà"
        ),
        "keyboard": main_menu
    },
    2: {
        "message": (
            "üí™ *–í—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –≤–∞–º –∫–∞–∂–µ—Ç—Å—è!*\n"
            "–î–∞–≤–∞–π—Ç–µ –≤–º–µ—Å—Ç–µ —Å–ø—Ä–∞–≤–∏–º—Å—è —Å —ç—Ç–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º:\n\n"
            "‚ùÑÔ∏è **–¢–µ—Ö–Ω–∏–∫–∞ '–õ–µ–¥—è–Ω–æ–π —â–∏—Ç'** (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è):\n"
            "1. –í–æ–∑—å–º–∏—Ç–µ *2 –∫—É–±–∏–∫–∞ –ª—å–¥–∞* (–∏–ª–∏ —Ö–æ–ª–æ–¥–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã)\n"
            "2. –î–µ—Ä–∂–∏—Ç–µ –≤ —Ä—É–∫–∞—Ö, —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Ç–µ—Å—å –Ω–∞ –æ—â—É—â–µ–Ω–∏—è—Ö:\n"
            "   - *¬´–Ø —á—É–≤—Å—Ç–≤—É—é —Ö–æ–ª–æ–¥¬ª*\n"
            "   - *¬´–Ø —á—É–≤—Å—Ç–≤—É—é, –∫–∞–∫ –ª—ë–¥ —Ç–∞–µ—Ç¬ª*\n"
            "   - *¬´–Ø —á—É–≤—Å—Ç–≤—É—é –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ —Ç–µ–ø–ª–∞¬ª*\n"
            "3. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø—Ä–æ —Å–µ–±—è: *¬´–≠—Ç–æ –ø—Ä–æ–π–¥–µ—Ç, —è –≤ –ø–æ—Ä—è–¥–∫–µ¬ª*\n\n"
            "*–í—ã —É–∂–µ –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –Ω–∞–¥ —Å–≤–æ–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º!* üåü"
        ),
        "keyboard": ReplyKeyboardMarkup(
            [["–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è"], ["–Ø —Å–ø—Ä–∞–≤–∏–ª—Å—è(–∞—Å—å)"]],
            resize_keyboard=True
        )
    },
    3: {
        "message": (
            "üõ°Ô∏è *–í—ã –Ω–µ –æ–¥–Ω–∏, —è –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å!*\n"
            "–°–µ–π—á–∞—Å –≤–∞–∂–Ω–æ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è –Ω–∞ –¥—ã—Ö–∞–Ω–∏–∏:\n\n"
            "üéà **–¢–µ—Ö–Ω–∏–∫–∞ '–í–æ–∑–¥—É—à–Ω—ã–π —à–∞—Ä'** (—ç–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è):\n"
            "1. *–°—è–¥—å—Ç–µ –Ω–∞ –ø–æ–ª*, –æ–±–æ–ø—Ä–∏—Ç–µ—Å—å —Å–ø–∏–Ω–æ–π –æ —Å—Ç–µ–Ω—É\n"
            "2. –ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π *–±–æ–ª—å—à–æ–π –≤–æ–∑–¥—É—à–Ω—ã–π —à–∞—Ä*\n"
            "3. *–ú–µ–¥–ª–µ–Ω–Ω–æ –Ω–∞–¥—É–≤–∞–π—Ç–µ* –µ–≥–æ –≤ –≤–æ–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –Ω–∞ –≤–¥–æ—Ö–µ (4 —Å–µ–∫)\n"
            "4. *–ó–∞–¥–µ—Ä–∂–∏—Ç–µ* –¥—ã—Ö–∞–Ω–∏–µ (2 —Å–µ–∫)\n"
            "5. *–°–¥—É–≤–∞–π—Ç–µ* —à–∞—Ä –Ω–∞ –≤—ã–¥–æ—Ö–µ (6 —Å–µ–∫)\n"
            "6. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ *5 —Ü–∏–∫–ª–æ–≤*, –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å\n\n"
            "*–í—ã —É–∂–µ –¥–µ–ª–∞–µ—Ç–µ –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ!* üí´\n"
            "–ï—Å–ª–∏ —Å—Ç–∞–Ω–µ—Ç —Ç—è–∂–µ–ª–æ ‚Äî —Å—Ä–∞–∑—É –Ω–∞–∂–º–∏—Ç–µ ¬´–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è¬ª"
        ),
        "keyboard": ReplyKeyboardMarkup(
            [["–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è"], ["–Ø –Ω–∞—á–∏–Ω–∞—é –¥—ã—à–∞—Ç—å"]],
            resize_keyboard=True
        )
    }
}


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º –∏ —Ç—Ä–µ–≤–æ–≥–æ–π. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=main_menu
    )


async def reset_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    keys = ['name', 'age', 'medication', 'diagnosis', 'history', 'last_stress_level']
    for key in keys:
        if key in context.user_data:
            del context.user_data[key]

    await update.message.reply_text(
        "üîÅ –í—Å–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∑–∞–Ω–æ–≤–æ.\n"
        "üë§ –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?",
        reply_markup=ReplyKeyboardRemove()
    )
    return NAME


async def show_user_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_data = context.user_data
    if not all(key in user_data for key in ['name', 'age', 'medication', 'diagnosis']):
        await update.message.reply_text(
            "üë§ –ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?",
            reply_markup=ReplyKeyboardRemove()
        )
        return NAME

    text = (
        f"üìã –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:\n\n"
        f"–ò–º—è: {user_data['name']}\n"
        f"–í–æ–∑—Ä–∞—Å—Ç: {user_data['age']}\n"
        f"–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã: {user_data['medication']}\n"
        f"–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–∏–∞–≥–Ω–æ–∑—ã: {user_data['diagnosis']}\n\n"
        f"–í—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ —Å–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ"
    )

    await update.message.reply_text(text, reply_markup=edit_data_menu)
    return ConversationHandler.END


async def start_edit_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?",
        reply_markup=choose_field_menu
    )
    return CHOOSE_FIELD


async def choose_field(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "–ò–º—è":
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è:", reply_markup=ReplyKeyboardRemove())
        return EDIT_NAME
    elif text == "–í–æ–∑—Ä–∞—Å—Ç":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=age_keyboard)
        return EDIT_AGE
    elif text == "–ü—Ä–µ–ø–∞—Ä–∞—Ç—ã":
        await update.message.reply_text("–ü—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã?", reply_markup=yes_no_keyboard)
        return EDIT_MEDICATION
    elif text == "–î–∏–∞–≥–Ω–æ–∑—ã":
        await update.message.reply_text("–ï—Å—Ç—å –ª–∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–∏–∞–≥–Ω–æ–∑—ã?", reply_markup=yes_no_keyboard)
        return EDIT_DIAGNOSIS
    else:
        await update.message.reply_text("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)
        return ConversationHandler.END


async def edit_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text
    await update.message.reply_text(
        f"‚úÖ –ò–º—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {update.message.text}!",
        reply_markup=main_menu
    )
    return ConversationHandler.END


async def edit_age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['age'] = update.message.text
    await update.message.reply_text(
        f"‚úÖ –í–æ–∑—Ä–∞—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {update.message.text}!",
        reply_markup=main_menu
    )
    return ConversationHandler.END


async def edit_medication(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['medication'] = update.message.text
    await update.message.reply_text(
        f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {update.message.text}!",
        reply_markup=main_menu
    )
    return ConversationHandler.END


async def edit_diagnosis(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['diagnosis'] = update.message.text
    await update.message.reply_text(
        f"‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∏–∞–≥–Ω–æ–∑–∞—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {update.message.text}!",
        reply_markup=main_menu
    )
    return ConversationHandler.END


async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['name'] = update.message.text
    await update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=age_keyboard
    )
    return AGE


async def get_age(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['age'] = update.message.text
    await update.message.reply_text(
        "–ü—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã (–≥–æ—Ä–º–æ–Ω—ã/–∞–Ω—Ç–∏–¥–µ–ø—Ä–µ—Å—Å–∞–Ω—Ç—ã)?",
        reply_markup=yes_no_keyboard
    )
    return MEDICATION


async def get_medication(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['medication'] = update.message.text
    await update.message.reply_text(
        "–ï—Å—Ç—å –ª–∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –¥–∏–∞–≥–Ω–æ–∑—ã?",
        reply_markup=yes_no_keyboard
    )
    return DIAGNOSIS


async def get_diagnosis(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['diagnosis'] = update.message.text
    name = context.user_data['name']
    await update.message.reply_text(
        f"–°–ø–∞—Å–∏–±–æ, {name}, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!",
        reply_markup=main_menu
    )
    return ConversationHandler.END


async def handle_test(update: Update, context: ContextTypes.DEFAULT_TYPE):
    scores = {"–ù–∏–∫–æ–≥–¥–∞": 0, "–†–µ–¥–∫–æ": 1, "–ò–Ω–æ–≥–¥–∞": 2, "–ß–∞—Å—Ç–æ": 3, "–ü–æ—Å—Ç–æ—è–Ω–Ω–æ": 4}
    context.user_data['test_score'] += scores.get(update.message.text, 0)
    context.user_data['test_step'] += 1

    if context.user_data['test_step'] < TEST_TOTAL:
        await update.message.reply_text(TEST[context.user_data['test_step']], reply_markup=test_keyboard)
        return TEST_QUESTIONS
    else:
        total = context.user_data['test_score']

        if total <= 5:
            level = "low"
        elif total <= 10:
            level = "medium"
        elif total <= 15:
            level = "high"
        else:
            level = "critical"

        context.user_data['last_stress_level'] = level

        result_text = f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {total}/20\n" + STRESS_ADVICE[level]

        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")
        history = context.user_data.setdefault("history", [])
        history.append(f"{timestamp} ‚Äî {total}/20")

        with open("stress_results.txt", "a", encoding="utf-8") as file:
            file.write(f"{timestamp} ‚Äî {update.effective_user.id} ‚Äî {total}/20\n")

        await update.message.reply_text(
            result_text + "\n\n–•–æ—Ç–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏?",
            reply_markup=result_keyboard
        )
        return ConversationHandler.END


async def handle_panic_test(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if 'panic_test' not in context.user_data:
        context.user_data['panic_test'] = {'step': 0, 'score': 0}

    if update.message.text in ["–î–∞", "–ù–µ—Ç"]:
        if update.message.text == "–î–∞":
            context.user_data['panic_test']['score'] += 1
        context.user_data['panic_test']['step'] += 1

    if context.user_data['panic_test']['step'] < len(PANIC_TEST):
        await update.message.reply_text(
            PANIC_TEST[context.user_data['panic_test']['step']],
            reply_markup=yes_no_keyboard
        )
        return TEST_PANIC_QUESTIONS
    else:
        score = context.user_data['panic_test']['score']
        level = min(3, score)  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –æ—Ç 0 –¥–æ 3

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã (–±–µ–∑ –ø–æ–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é)
        timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")
        with open("panic_results.txt", "a", encoding="utf-8") as file:
            file.write(f"{timestamp} ‚Äî {update.effective_user.id} ‚Äî {score}\n")

        # –î–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        technique = PANIC_TECHNIQUES[level]
        await update.message.reply_text(
            technique["message"],
            reply_markup=technique["keyboard"],
            parse_mode="Markdown"
        )

        # –î–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
        if level >= 2:
            context.user_data['need_followup'] = True
        return ConversationHandler.END


async def handle_followup(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "–Ø –Ω–∞—á–∏–Ω–∞—é –¥—ã—à–∞—Ç—å":
        await update.message.reply_text(
            "üëç –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –¥—ã—à–∞—Ç—å –≤ —Ç–æ–º –∂–µ —Ä–∏—Ç–º–µ. "
            "–° –∫–∞–∂–¥—ã–º –≤—ã–¥–æ—Ö–æ–º —Ç—Ä–µ–≤–æ–≥–∞ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è. "
            "–í—ã –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å! –ß–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã —è –ø—Ä–æ–≤–µ—Ä—é, –∫–∞–∫ –≤—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç–µ.",
            reply_markup=ReplyKeyboardMarkup(
                [["–°—Ç–∞–ª–æ –ª—É—á—à–µ"], ["–í—Å–µ –µ—â–µ —Ç—è–∂–µ–ª–æ"]],
                resize_keyboard=True
            )
        )
    elif text == "–Ø —Å–ø—Ä–∞–≤–∏–ª—Å—è(–∞—Å—å)":
        await update.message.reply_text(
            "üéâ –Ø –≥–æ—Ä–∂—É—Å—å –≤–∞–º–∏! –≠—Ç–æ –±—ã–ª–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ, –Ω–æ –≤—ã —Å–º–æ–≥–ª–∏! "
            "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ—Ö–≤–∞–ª–∏—Ç–µ —Å–µ–±—è –∑–∞ —ç—Ç—É –ø–æ–±–µ–¥—É.",
            reply_markup=main_menu
        )
    elif text == "–°—Ç–∞–ª–æ –ª—É—á—à–µ":
        await update.message.reply_text(
            "üå§Ô∏è –ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏! –í—ã –±–æ–ª—å—à–∞—è —É–º–Ω–∏—á–∫–∞! "
            "–ü–æ–º–Ω–∏—Ç–µ ‚Äî —ç—Ç–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ, –∞ –≤—ã —Å–∏–ª—å–Ω–µ–µ, —á–µ–º –¥—É–º–∞–µ—Ç–µ.",
            reply_markup=main_menu
        )
    elif text == "–í—Å–µ –µ—â–µ —Ç—è–∂–µ–ª–æ":
        await update.message.reply_text(
            "üÜò –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞ –≥–æ—Ä—è—á—É—é –ª–∏–Ω–∏—é 150. "
            "–í—ã –Ω–µ –æ–¥–Ω–∏, –∏ –ø–æ–º–æ—â—å —É–∂–µ —Ä—è–¥–æ–º. –Ø –æ—Å—Ç–∞—é—Å—å —Å –≤–∞–º–∏.",
            reply_markup=ReplyKeyboardMarkup(
                [["–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è"], ["–Ø –ø–æ–∑–≤–æ–Ω–∏–ª(–∞)"]],
                resize_keyboard=True
            )
        )
    elif text == "–Ø –ø–æ–∑–≤–æ–Ω–∏–ª(–∞)":
        await update.message.reply_text(
            "üíô –í—ã —Å–¥–µ–ª–∞–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤—ã–±–æ—Ä. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã –ø–æ–º–æ–≥—É—Ç –≤–∞–º. "
            "–Ø –∑–¥–µ—Å—å, –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ.",
            reply_markup=main_menu
        )
    return ConversationHandler.END


async def extended_advice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    level = context.user_data.get('last_stress_level')
    if level in EXTENDED_ADVICE:
        await update.message.reply_text(
            EXTENDED_ADVICE[level],
            reply_markup=result_keyboard
        )
    else:
        await update.message.reply_text(
            "–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ —Ç–µ—Å—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π",
            reply_markup=main_menu
        )


async def share_experience(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        await update.message.reply_text(
            "–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
            reply_markup=main_menu
        )
        return ConversationHandler.END

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    timestamp = datetime.now().strftime("%d.%m.%Y %H:%M")
    with open("user_experiences.txt", "a", encoding="utf-8") as file:
        file.write(f"{timestamp} ‚Äî {update.effective_user.id} ‚Äî {text}\n")

    await update.message.reply_text(
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª–∏—Å—å. –í–∞—à–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è –≤–∞–∂–Ω—ã.\n"
        "–ú–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é.",
        reply_markup=ReplyKeyboardMarkup(
            [["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]],
            resize_keyboard=True
        )
    )
    return SHARE_EXPERIENCE


async def handle_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text

    if text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é":
        await update.message.reply_text(
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:",
            reply_markup=main_menu
        )
        return ConversationHandler.END

    elif text == "–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ":
        return await show_user_data(update, context)

    elif text == "–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
        return await start_edit_data(update, context)

    elif text == "–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ":
        return await reset_data(update, context)

    elif text == "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞":
        context.user_data['test_step'] = 0
        context.user_data['test_score'] = 0
        await update.message.reply_text(
            "–ù–∞—á–Ω—ë–º —Ç–µ—Å—Ç. –û—Ç–≤–µ—á–∞–π—Ç–µ —á–µ—Å—Ç–Ω–æ:",
            reply_markup=test_keyboard
        )
        await update.message.reply_text(TEST[0])
        return TEST_QUESTIONS

    elif text == "–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–±–æ–ª—å—à–µ":
        return await extended_advice(update, context)

    elif text == "–í—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è":
        await update.message.reply_text(
            "üí¨ –ù–∞–ø–∏—à–∏—Ç–µ –≤—Å—ë, —á—Ç–æ –≤–∞—Å –±–µ—Å–ø–æ–∫–æ–∏—Ç. –Ø –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –≤—ã—Å–ª—É—à–∞—é:",
            reply_markup=ReplyKeyboardMarkup(
                [["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"]],
                resize_keyboard=True
            )
        )
        return SHARE_EXPERIENCE

    elif text == "–ú–æ–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞":
        history = context.user_data.get("history", [])
        if not history:
            await update.message.reply_text("‚ùóÔ∏è–í—ã –µ—â—ë –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏ —Ç–µ—Å—Ç.", reply_markup=main_menu)
        else:
            await update.message.reply_text("üìä –í–∞—à–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:\n" + "\n".join(history), reply_markup=main_menu)
        return ConversationHandler.END

    elif text == "–°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å":
        await update.message.reply_text(
            "–°–µ–π—á–∞—Å –ø—Ä–æ–≤–µ–¥–µ–º –±—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç (5 –≤–æ–ø—Ä–æ—Å–æ–≤), —á—Ç–æ–±—ã –ø–æ–¥–æ–±—Ä–∞—Ç—å –ª—É—á—à—É—é —Ç–µ—Ö–Ω–∏–∫—É –ø–æ–º–æ—â–∏.\n"
            "–û—Ç–≤–µ—á–∞–π—Ç–µ ¬´–î–∞¬ª –∏–ª–∏ ¬´–ù–µ—Ç¬ª:",
            reply_markup=yes_no_keyboard
        )
        context.user_data['panic_test'] = {'step': 0, 'score': 0}
        await update.message.reply_text(PANIC_TEST[0], reply_markup=yes_no_keyboard)
        return TEST_PANIC_QUESTIONS

    elif text == "–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è":
        await update.message.reply_text(
            "üìû –¢–µ–ª–µ—Ñ–æ–Ω—ã –ø–æ–º–æ—â–∏:\n\n"
            "‚Ä¢ –ö—Ä–∏–∑–∏—Å–Ω–∞—è –ª–∏–Ω–∏—è: 150 (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ)\n"
            "‚Ä¢ –î–ª—è –¥–µ—Ç–µ–π: 8-800-2000-122\n"
            "‚Ä¢ –ü—Å–∏—Ö–æ–ª–æ–≥–∏ –ú–ß–°: 8-495-989-50-50\n\n"
            "–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∑–∞ –ø–æ–º–æ—â—å—é!",
            reply_markup=main_menu
        )
        return ConversationHandler.END

    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é.", reply_markup=main_menu)
        return ConversationHandler.END


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.",
        reply_markup=main_menu
    )
    return ConversationHandler.END


def main():
    application = ApplicationBuilder().token("7769281721:AAGvoXvz7GM4dgL0boz0KOh_RagRASJ0AAc").build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–∏–∞–ª–æ–≥–æ–≤
    info_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Å–µ–±–µ$"), handle_menu)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            AGE: [MessageHandler(filters.Regex("^(12-18|19-25|26-35|36-45|46-60)$"), get_age)],
            MEDICATION: [MessageHandler(filters.Regex("^(–î–∞|–ù–µ—Ç)$"), get_medication)],
            DIAGNOSIS: [MessageHandler(filters.Regex("^(–î–∞|–ù–µ—Ç)$"), get_diagnosis)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    reset_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–°–±—Ä–æ—Å–∏—Ç—å –¥–∞–Ω–Ω—ã–µ$"), reset_data)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            AGE: [MessageHandler(filters.Regex("^(12-18|19-25|26-35|36-45|46-60)$"), get_age)],
            MEDICATION: [MessageHandler(filters.Regex("^(–î–∞|–ù–µ—Ç)$"), get_medication)],
            DIAGNOSIS: [MessageHandler(filters.Regex("^(–î–∞|–ù–µ—Ç)$"), get_diagnosis)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    test_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç —É—Ä–æ–≤–Ω—è —Å—Ç—Ä–µ—Å—Å–∞$"), handle_menu)],
        states={
            TEST_QUESTIONS: [MessageHandler(filters.Regex("^(–ù–∏–∫–æ–≥–¥–∞|–†–µ–¥–∫–æ|–ò–Ω–æ–≥–¥–∞|–ß–∞—Å—Ç–æ|–ü–æ—Å—Ç–æ—è–Ω–Ω–æ)$"), handle_test)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    panic_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–°—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å$"), handle_menu)],
        states={
            TEST_PANIC_QUESTIONS: [MessageHandler(filters.Regex("^(–î–∞|–ù–µ—Ç)$"), handle_panic_test)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    share_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–í—ã–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è$"), handle_menu)],
        states={
            SHARE_EXPERIENCE: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, share_experience),
                MessageHandler(filters.Regex("^–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é$"), handle_menu)
            ],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    edit_conv = ConversationHandler(
        entry_points=[MessageHandler(filters.Regex("^–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ$"), start_edit_data)],
        states={
            CHOOSE_FIELD: [MessageHandler(filters.TEXT & ~filters.COMMAND, choose_field)],
            EDIT_NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, edit_name)],
            EDIT_AGE: [MessageHandler(filters.Regex("^(12-18|19-25|26-35|36-45|46-60)$"), edit_age)],
            EDIT_MEDICATION: [MessageHandler(filters.Regex("^(–î–∞|–ù–µ—Ç)$"), edit_medication)],
            EDIT_DIAGNOSIS: [MessageHandler(filters.Regex("^(–î–∞|–ù–µ—Ç)$"), edit_diagnosis)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    followup_conv = ConversationHandler(
        entry_points=[
            MessageHandler(
                filters.Regex("^(–Ø –Ω–∞—á–∏–Ω–∞—é –¥—ã—à–∞—Ç—å|–Ø —Å–ø—Ä–∞–≤–∏–ª—Å—è\(–∞—Å—å\)|–°—Ç–∞–ª–æ –ª—É—á—à–µ|–í—Å–µ –µ—â–µ —Ç—è–∂–µ–ª–æ|–Ø –ø–æ–∑–≤–æ–Ω–∏–ª\(–∞\))$"),
                handle_followup)
        ],
        states={},
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(info_conv)
    application.add_handler(reset_conv)
    application.add_handler(test_conv)
    application.add_handler(panic_conv)
    application.add_handler(share_conv)
    application.add_handler(edit_conv)
    application.add_handler(followup_conv)
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_menu))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()


if __name__ == "__main__":
    main()
